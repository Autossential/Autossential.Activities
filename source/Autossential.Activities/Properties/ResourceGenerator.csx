#r "..\bin\Debug\net6.0-windows\Autossential.Activities.dll"

using Autossential.Activities;
using Autossential.Activities.Properties;
using System;
using System.Collections;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Resources;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Text.RegularExpressions;

var rm = Autossential.Activities.Properties.Resources.ResourceManager;

using (var sw = new StreamWriter("Resources.gen.cs"))
{
    sw.WriteLine($$"""
    // Auto-Generated by dotnet script ResourceGenerator.csx at {{DateTime.Now.ToString("yyyyMMddHHmmss")}}

    using System;
    using System.Globalization;

    namespace Autossential.Activities.Properties;

    internal static class ResourcesFn
    {
        private static readonly IFormatProvider _culture = CultureInfo.InvariantCulture;

    """);
        
    var formattingMessages = rm.GetResourceSet(CultureInfo.InvariantCulture, true, true)
        .Cast<DictionaryEntry>()
        .Where(p => p.Value.ToString().Contains("{0}"))
        .OrderBy(p => p.Key)
        .ToArray();

    foreach (DictionaryEntry entry in formattingMessages)
    {
        var count = Regex.Matches(entry.Value.ToString(), @"\{\d+\}").Count;
        var args = new string[count];
        var argsSign = new string[count];
        var paramNames = new string[count];
        sw.WriteLine($"""
            /// <summary>
            /// Looks up a localized string similar to '{entry.Value}'.
            /// </summary>"
        """);

        for (var i = 0; i < count; i++)
        {
            sw.WriteLine($@"    /// <param name=""arg{i}"">An object ({i}) to format.</param>");
            args[i] = "arg" + i;
            argsSign[i] = "object arg" + i;
        }

        sw.WriteLine($$"""
            /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
            public static string {{entry.Key}}Format({{string.Join(", ", argsSign)}})
            {
                return string.Format(_culture, Resources.{{entry.Key}}, {{string.Join(", ", args)}});
            }
        """);
    }

    sw.Write("}");
}