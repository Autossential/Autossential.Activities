//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Autossential.Activities.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Autossential.Activities.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instantiate the Collection if necessary..
        /// </summary>
        public static string AddRangeToCollection_AutoInstantiate_Description {
            get {
                return ResourceManager.GetString("AddRangeToCollection_AutoInstantiate_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto Instantiate.
        /// </summary>
        public static string AddRangeToCollection_AutoInstantiate_DisplayName {
            get {
                return ResourceManager.GetString("AddRangeToCollection_AutoInstantiate_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The collection you want to modify..
        /// </summary>
        public static string AddRangeToCollection_Collection_Description {
            get {
                return ResourceManager.GetString("AddRangeToCollection_Collection_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection.
        /// </summary>
        public static string AddRangeToCollection_Collection_DisplayName {
            get {
                return ResourceManager.GetString("AddRangeToCollection_Collection_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adds a set of items to the specified collection..
        /// </summary>
        public static string AddRangeToCollection_Description {
            get {
                return ResourceManager.GetString("AddRangeToCollection_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Range To Collection.
        /// </summary>
        public static string AddRangeToCollection_DisplayName {
            get {
                return ResourceManager.GetString("AddRangeToCollection_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The items to be added to the collection..
        /// </summary>
        public static string AddRangeToCollection_Items_Description {
            get {
                return ResourceManager.GetString("AddRangeToCollection_Items_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Items.
        /// </summary>
        public static string AddRangeToCollection_Items_DisplayName {
            get {
                return ResourceManager.GetString("AddRangeToCollection_Items_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instantiates the Dictionary if required..
        /// </summary>
        public static string AddToDictionary_AutoInstantiate_Description {
            get {
                return ResourceManager.GetString("AddToDictionary_AutoInstantiate_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto Instantiate.
        /// </summary>
        public static string AddToDictionary_AutoInstantiate_DisplayName {
            get {
                return ResourceManager.GetString("AddToDictionary_AutoInstantiate_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adds a new key-value pair to the Dictionary. If the Dictionary does not exist, a new instance is created. If the key already exists in it, an exception will be thrown except if the Update If Exists option is enabled..
        /// </summary>
        public static string AddToDictionary_Description {
            get {
                return ResourceManager.GetString("AddToDictionary_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add To/Update Dictionary.
        /// </summary>
        public static string AddToDictionary_DisplayName {
            get {
                return ResourceManager.GetString("AddToDictionary_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An item with the same key has already been added. Key: {0}.
        /// </summary>
        public static string AddToDictionary_ErrorMsg_KeyAlreadyExists {
            get {
                return ResourceManager.GetString("AddToDictionary_ErrorMsg_KeyAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key of the element to add..
        /// </summary>
        public static string AddToDictionary_Key_Description {
            get {
                return ResourceManager.GetString("AddToDictionary_Key_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key.
        /// </summary>
        public static string AddToDictionary_Key_DisplayName {
            get {
                return ResourceManager.GetString("AddToDictionary_Key_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Dictionary instance to receive the new key-value pair..
        /// </summary>
        public static string AddToDictionary_ReferenceDictionary_Description {
            get {
                return ResourceManager.GetString("AddToDictionary_ReferenceDictionary_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dictionary.
        /// </summary>
        public static string AddToDictionary_ReferenceDictionary_DisplayName {
            get {
                return ResourceManager.GetString("AddToDictionary_ReferenceDictionary_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the key already exists in the Dictionary, updates its value..
        /// </summary>
        public static string AddToDictionary_UpdateIfExists_Description {
            get {
                return ResourceManager.GetString("AddToDictionary_UpdateIfExists_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update If Exists.
        /// </summary>
        public static string AddToDictionary_UpdateIfExists_DisplayName {
            get {
                return ResourceManager.GetString("AddToDictionary_UpdateIfExists_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of the element to add. The value can be null for reference types..
        /// </summary>
        public static string AddToDictionary_Value_Description {
            get {
                return ResourceManager.GetString("AddToDictionary_Value_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        public static string AddToDictionary_Value_DisplayName {
            get {
                return ResourceManager.GetString("AddToDictionary_Value_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AES.
        /// </summary>
        public static string AesAlgorithmEncryption_DisplayName {
            get {
                return ResourceManager.GetString("AesAlgorithmEncryption_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AES GCM.
        /// </summary>
        public static string AesGcmAlgorithmEncryption_DisplayName {
            get {
                return ResourceManager.GetString("AesGcmAlgorithmEncryption_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The column indexes or column names to apply the aggregation. If not specified, the aggregation will be applied in all possible columns..
        /// </summary>
        public static string Aggregate_Columns_Description {
            get {
                return ResourceManager.GetString("Aggregate_Columns_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Columns.
        /// </summary>
        public static string Aggregate_Columns_DisplayName {
            get {
                return ResourceManager.GetString("Aggregate_Columns_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aggregates the DataTable data by the specified function resulting in a DataRow, product of the aggregation..
        /// </summary>
        public static string Aggregate_Description {
            get {
                return ResourceManager.GetString("Aggregate_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aggregate.
        /// </summary>
        public static string Aggregate_DisplayName {
            get {
                return ResourceManager.GetString("Aggregate_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The aggregate function..
        /// </summary>
        public static string Aggregate_Function_Description {
            get {
                return ResourceManager.GetString("Aggregate_Function_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function.
        /// </summary>
        public static string Aggregate_Function_DisplayName {
            get {
                return ResourceManager.GetString("Aggregate_Function_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data table which the aggregate function will be applied..
        /// </summary>
        public static string Aggregate_InputDataTable_Description {
            get {
                return ResourceManager.GetString("Aggregate_InputDataTable_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataTable.
        /// </summary>
        public static string Aggregate_InputDataTable_DisplayName {
            get {
                return ResourceManager.GetString("Aggregate_InputDataTable_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An object array containing the result of the aggregation..
        /// </summary>
        public static string Aggregate_Result_Description {
            get {
                return ResourceManager.GetString("Aggregate_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result.
        /// </summary>
        public static string Aggregate_Result_DisplayName {
            get {
                return ResourceManager.GetString("Aggregate_Result_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A collection of key/value pairs that provide additional user-defined information about the exception..
        /// </summary>
        public static string CheckPoint_Data_Description {
            get {
                return ResourceManager.GetString("CheckPoint_Data_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data.
        /// </summary>
        public static string CheckPoint_Data_DisplayName {
            get {
                return ResourceManager.GetString("CheckPoint_Data_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checks if a given expression is true, if is not, thrown the specified exception..
        /// </summary>
        public static string CheckPoint_Description {
            get {
                return ResourceManager.GetString("CheckPoint_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check Point.
        /// </summary>
        public static string CheckPoint_DisplayName {
            get {
                return ResourceManager.GetString("CheckPoint_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The exception to thrown if the expression is not true..
        /// </summary>
        public static string CheckPoint_Exception_Description {
            get {
                return ResourceManager.GetString("CheckPoint_Exception_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception.
        /// </summary>
        public static string CheckPoint_Exception_DisplayName {
            get {
                return ResourceManager.GetString("CheckPoint_Exception_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The expression to be evaluated..
        /// </summary>
        public static string CheckPoint_Expression_Description {
            get {
                return ResourceManager.GetString("CheckPoint_Expression_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression.
        /// </summary>
        public static string CheckPoint_Expression_DisplayName {
            get {
                return ResourceManager.GetString("CheckPoint_Expression_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines if the left empty folders after files deletion must also be deleted..
        /// </summary>
        public static string CleanUpFolder_DeleteEmptyFolders_Description {
            get {
                return ResourceManager.GetString("CleanUpFolder_DeleteEmptyFolders_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DeleteEmptyFolders.
        /// </summary>
        public static string CleanUpFolder_DeleteEmptyFolders_DisplayName {
            get {
                return ResourceManager.GetString("CleanUpFolder_DeleteEmptyFolders_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deletes all files and folders from a specified folder..
        /// </summary>
        public static string CleanUpFolder_Description {
            get {
                return ResourceManager.GetString("CleanUpFolder_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clean Up Folder.
        /// </summary>
        public static string CleanUpFolder_DisplayName {
            get {
                return ResourceManager.GetString("CleanUpFolder_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The folder path to be cleaned up..
        /// </summary>
        public static string CleanUpFolder_Folder_Description {
            get {
                return ResourceManager.GetString("CleanUpFolder_Folder_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FolderPath.
        /// </summary>
        public static string CleanUpFolder_Folder_DisplayName {
            get {
                return ResourceManager.GetString("CleanUpFolder_Folder_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deletes only the files with last write time till this reference date. Default is DateTime.Now..
        /// </summary>
        public static string CleanUpFolder_LastWriteTime_Description {
            get {
                return ResourceManager.GetString("CleanUpFolder_LastWriteTime_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LastWriteTime.
        /// </summary>
        public static string CleanUpFolder_LastWriteTime_DisplayName {
            get {
                return ResourceManager.GetString("CleanUpFolder_LastWriteTime_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An object containing the number of files deleted, folders deleted and total deleted..
        /// </summary>
        public static string CleanUpFolder_Result_Description {
            get {
                return ResourceManager.GetString("CleanUpFolder_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result.
        /// </summary>
        public static string CleanUpFolder_Result_DisplayName {
            get {
                return ResourceManager.GetString("CleanUpFolder_Result_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies whether the search operation should include only the current directory or should include all subdirectories..
        /// </summary>
        public static string CleanUpFolder_SearchOption_Description {
            get {
                return ResourceManager.GetString("CleanUpFolder_SearchOption_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SearchOption.
        /// </summary>
        public static string CleanUpFolder_SearchOption_DisplayName {
            get {
                return ResourceManager.GetString("CleanUpFolder_SearchOption_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SearchPattern.
        /// </summary>
        public static string CleanUpFolder_SearchPattern_DisplayName {
            get {
                return ResourceManager.GetString("CleanUpFolder_SearchPattern_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Common.
        /// </summary>
        public static string Common_Category {
            get {
                return ResourceManager.GetString("Common_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set, continue executing the remaining activities even if the current activity has failed..
        /// </summary>
        public static string Common_ContinueOnError {
            get {
                return ResourceManager.GetString("Common_ContinueOnError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The search string to match against the names of files in path. This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn&apos;t support regular expressions. It supports a string or a collection of strings. Default value is all files (*.*). The features can be extended by SearchPatternMode property..
        /// </summary>
        public static string Common_SearchPattern {
            get {
                return ResourceManager.GetString("Common_SearchPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Native: applies the search pattern using the native standards. Extended: allows the use of an additional wildcard (!) to create negative patterns, e.g: (!*.txt) means to match everything except (*.txt) files. Complete: It also allows negative patterns and perform the testing in the full file path instead of only in the file name..
        /// </summary>
        public static string Common_SearchPatternMode {
            get {
                return ResourceManager.GetString("Common_SearchPatternMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the amount of time in milliseconds to wait for the activity to run before an error is thrown. The default value is 30000 (30s)..
        /// </summary>
        public static string Common_Timeout {
            get {
                return ResourceManager.GetString("Common_Timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Its a wrapper that when combined with Exit Activity, interrupts the children execution flow exiting the Container beforehand..
        /// </summary>
        public static string Container_Description {
            get {
                return ResourceManager.GetString("Container_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The desired culture, eg.: en-US, pt-BR, jp-JP, etc..
        /// </summary>
        public static string CultureScope_CultureName_Description {
            get {
                return ResourceManager.GetString("CultureScope_CultureName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CultureName.
        /// </summary>
        public static string CultureScope_CultureName_DisplayName {
            get {
                return ResourceManager.GetString("CultureScope_CultureName_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A container that allows you to run a set of activities over a different culture..
        /// </summary>
        public static string CultureScope_Description {
            get {
                return ResourceManager.GetString("CultureScope_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Culture Scope.
        /// </summary>
        public static string CultureScope_DisplayName {
            get {
                return ResourceManager.GetString("CultureScope_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Converts a DataRow to Dictionary..
        /// </summary>
        public static string DataRowToDictionary_Description {
            get {
                return ResourceManager.GetString("DataRowToDictionary_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataRow To Dictionary.
        /// </summary>
        public static string DataRowToDictionary_DisplayName {
            get {
                return ResourceManager.GetString("DataRowToDictionary_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input DataRow..
        /// </summary>
        public static string DataRowToDictionary_InputDataRow_Description {
            get {
                return ResourceManager.GetString("DataRowToDictionary_InputDataRow_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataRow.
        /// </summary>
        public static string DataRowToDictionary_InputDataRow_DisplayName {
            get {
                return ResourceManager.GetString("DataRowToDictionary_InputDataRow_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The output Dictionary..
        /// </summary>
        public static string DataRowToDictionary_Result_Description {
            get {
                return ResourceManager.GetString("DataRowToDictionary_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result.
        /// </summary>
        public static string DataRowToDictionary_Result_DisplayName {
            get {
                return ResourceManager.GetString("DataRowToDictionary_Result_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines if is to encrypt or decrypt the input value..
        /// </summary>
        public static string DataTableEncryption_Action_Description {
            get {
                return ResourceManager.GetString("DataTableEncryption_Action_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action.
        /// </summary>
        public static string DataTableEncryption_Action_DisplayName {
            get {
                return ResourceManager.GetString("DataTableEncryption_Action_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The column indexes or column names to be decrypted..
        /// </summary>
        public static string DataTableEncryption_Columns_Description {
            get {
                return ResourceManager.GetString("DataTableEncryption_Columns_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Columns.
        /// </summary>
        public static string DataTableEncryption_Columns_DisplayName {
            get {
                return ResourceManager.GetString("DataTableEncryption_Columns_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides methods to encrypt or decrypt the values of a DataTable using a specified algorithm and key..
        /// </summary>
        public static string DataTableEncryption_Description {
            get {
                return ResourceManager.GetString("DataTableEncryption_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataTable Encryption.
        /// </summary>
        public static string DataTableEncryption_DisplayName {
            get {
                return ResourceManager.GetString("DataTableEncryption_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DataTable to encrypt or decrypt..
        /// </summary>
        public static string DataTableEncryption_Input_Description {
            get {
                return ResourceManager.GetString("DataTableEncryption_Input_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input.
        /// </summary>
        public static string DataTableEncryption_Input_DisplayName {
            get {
                return ResourceManager.GetString("DataTableEncryption_Input_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key to be use. Can be a string or a SecureString..
        /// </summary>
        public static string DataTableEncryption_Key_Description {
            get {
                return ResourceManager.GetString("DataTableEncryption_Key_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key.
        /// </summary>
        public static string DataTableEncryption_Key_DisplayName {
            get {
                return ResourceManager.GetString("DataTableEncryption_Key_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uses parallel processing to scan through the DataTable and decrypt the data. Although this can drastically increase the processing speed, the rows in the resulting DataTable may have its order changed. Combine it with Sort property to reorder the DataTable when necessary..
        /// </summary>
        public static string DataTableEncryption_ParallelProcessing_Description {
            get {
                return ResourceManager.GetString("DataTableEncryption_ParallelProcessing_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ParallelProcessing.
        /// </summary>
        public static string DataTableEncryption_ParallelProcessing_DisplayName {
            get {
                return ResourceManager.GetString("DataTableEncryption_ParallelProcessing_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The encrypted or decrypted DataTable..
        /// </summary>
        public static string DataTableEncryption_Result_Description {
            get {
                return ResourceManager.GetString("DataTableEncryption_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result.
        /// </summary>
        public static string DataTableEncryption_Result_DisplayName {
            get {
                return ResourceManager.GetString("DataTableEncryption_Result_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the sort column or columns, and sort order for the output DataTable. The value must be a string that contains the column name followed by &quot;ASC&quot; (ascending) or &quot;DESC&quot; (descending). Columns are sorted ascending by default. Multiple columns can be separated by commas..
        /// </summary>
        public static string DataTableEncryption_Sort_Description {
            get {
                return ResourceManager.GetString("DataTableEncryption_Sort_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort.
        /// </summary>
        public static string DataTableEncryption_Sort_DisplayName {
            get {
                return ResourceManager.GetString("DataTableEncryption_Sort_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The encoding used to interpret the data and key..
        /// </summary>
        public static string DataTableEncryption_TextEncoding_Description {
            get {
                return ResourceManager.GetString("DataTableEncryption_TextEncoding_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TextEncoding.
        /// </summary>
        public static string DataTableEncryption_TextEncoding_DisplayName {
            get {
                return ResourceManager.GetString("DataTableEncryption_TextEncoding_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The date format to be used on the string representation for DateTime column types..
        /// </summary>
        public static string DataTableToText_DateTimeFormat_Description {
            get {
                return ResourceManager.GetString("DataTableToText_DateTimeFormat_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DateTimeFormat.
        /// </summary>
        public static string DataTableToText_DateTimeFormat_DisplayName {
            get {
                return ResourceManager.GetString("DataTableToText_DateTimeFormat_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns a string representation of a datatable on the specified text format (HTML, JSON or XML)..
        /// </summary>
        public static string DataTableToText_Description {
            get {
                return ResourceManager.GetString("DataTableToText_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataTable To Text.
        /// </summary>
        public static string DataTableToText_DisplayName {
            get {
                return ResourceManager.GetString("DataTableToText_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DataTable..
        /// </summary>
        public static string DataTableToText_InputDataTable_Description {
            get {
                return ResourceManager.GetString("DataTableToText_InputDataTable_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataTable.
        /// </summary>
        public static string DataTableToText_InputDataTable_DisplayName {
            get {
                return ResourceManager.GetString("DataTableToText_InputDataTable_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The string representation of the DataTable..
        /// </summary>
        public static string DataTableToText_Result_Description {
            get {
                return ResourceManager.GetString("DataTableToText_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result.
        /// </summary>
        public static string DataTableToText_Result_DisplayName {
            get {
                return ResourceManager.GetString("DataTableToText_Result_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The text format..
        /// </summary>
        public static string DataTableToText_TextFormat_Description {
            get {
                return ResourceManager.GetString("DataTableToText_TextFormat_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TextFormat.
        /// </summary>
        public static string DataTableToText_TextFormat_DisplayName {
            get {
                return ResourceManager.GetString("DataTableToText_TextFormat_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decrements the value of a variable by the specified decrement value..
        /// </summary>
        public static string Decrement_Description {
            get {
                return ResourceManager.GetString("Decrement_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The decrement value cannot be smaller than 1..
        /// </summary>
        public static string Decrement_ErrorMsg_MinValue {
            get {
                return ResourceManager.GetString("Decrement_ErrorMsg_MinValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The decrement value..
        /// </summary>
        public static string Decrement_Value_Description {
            get {
                return ResourceManager.GetString("Decrement_Value_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        public static string Decrement_Value_DisplayName {
            get {
                return ResourceManager.GetString("Decrement_Value_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The variable to decrement..
        /// </summary>
        public static string Decrement_Variable_Description {
            get {
                return ResourceManager.GetString("Decrement_Variable_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variable.
        /// </summary>
        public static string Decrement_Variable_DisplayName {
            get {
                return ResourceManager.GetString("Decrement_Variable_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DES.
        /// </summary>
        public static string DESAlgorithmEncryption_DisplayName {
            get {
                return ResourceManager.GetString("DESAlgorithmEncryption_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Converts a Dictionary to DataTable..
        /// </summary>
        public static string DictionaryToDataTable_Description {
            get {
                return ResourceManager.GetString("DictionaryToDataTable_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dictionary To DataTable.
        /// </summary>
        public static string DictionaryToDataTable_DisplayName {
            get {
                return ResourceManager.GetString("DictionaryToDataTable_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input Dictionary..
        /// </summary>
        public static string DictionaryToDataTable_InputDictionary_Description {
            get {
                return ResourceManager.GetString("DictionaryToDataTable_InputDictionary_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dictionary.
        /// </summary>
        public static string DictionaryToDataTable_InputDictionary_DisplayName {
            get {
                return ResourceManager.GetString("DictionaryToDataTable_InputDictionary_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The output DataTable..
        /// </summary>
        public static string DictionaryToDataTable_Result_Description {
            get {
                return ResourceManager.GetString("DictionaryToDataTable_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result.
        /// </summary>
        public static string DictionaryToDataTable_Result_DisplayName {
            get {
                return ResourceManager.GetString("DictionaryToDataTable_Result_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An algorithm is required..
        /// </summary>
        public static string EncryptionBase_ErrorMsg_AlgorithmMissing {
            get {
                return ResourceManager.GetString("EncryptionBase_ErrorMsg_AlgorithmMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns an enumerable collection of full file names that match a search pattern (or collection of patterns) and enumeration options in a specified path (or collection of paths)..
        /// </summary>
        public static string EnumerateFiles_Description {
            get {
                return ResourceManager.GetString("EnumerateFiles_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The relative or absolute path (or collection of paths) to the directory (or directories) to search..
        /// </summary>
        public static string EnumerateFiles_DirectoryPath_Description {
            get {
                return ResourceManager.GetString("EnumerateFiles_DirectoryPath_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DirectoryPath.
        /// </summary>
        public static string EnumerateFiles_DirectoryPath_DisplayName {
            get {
                return ResourceManager.GetString("EnumerateFiles_DirectoryPath_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enumerate Files.
        /// </summary>
        public static string EnumerateFiles_DisplayName {
            get {
                return ResourceManager.GetString("EnumerateFiles_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Excludes from the enumeration the files with any of the specified attributes..
        /// </summary>
        public static string EnumerateFiles_Exclusions_Description {
            get {
                return ResourceManager.GetString("EnumerateFiles_Exclusions_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exclusions.
        /// </summary>
        public static string EnumerateFiles_Exclusions_DisplayName {
            get {
                return ResourceManager.GetString("EnumerateFiles_Exclusions_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An enumerable collection of the full names (including paths) for the files in the directory specified by path and that match the specified search pattern and option..
        /// </summary>
        public static string EnumerateFiles_Result_Description {
            get {
                return ResourceManager.GetString("EnumerateFiles_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result.
        /// </summary>
        public static string EnumerateFiles_Result_DisplayName {
            get {
                return ResourceManager.GetString("EnumerateFiles_Result_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies whether the search operation should include only the current directory or should include all subdirectories..
        /// </summary>
        public static string EnumerateFiles_SearchOption_Description {
            get {
                return ResourceManager.GetString("EnumerateFiles_SearchOption_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SearchOption.
        /// </summary>
        public static string EnumerateFiles_SearchOption_DisplayName {
            get {
                return ResourceManager.GetString("EnumerateFiles_SearchOption_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SearchPattern.
        /// </summary>
        public static string EnumerateFiles_SearchPattern_DisplayName {
            get {
                return ResourceManager.GetString("EnumerateFiles_SearchPattern_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Condition which determines if the activity will be evaluated. If empty it assumes True..
        /// </summary>
        public static string Exit_Condition_Description {
            get {
                return ResourceManager.GetString("Exit_Condition_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Condition.
        /// </summary>
        public static string Exit_Condition_DisplayName {
            get {
                return ResourceManager.GetString("Exit_Condition_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exits from the Container or Iterate Activities interrupting any child executions after it..
        /// </summary>
        public static string Exit_Description {
            get {
                return ResourceManager.GetString("Exit_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The column name or index where the values will be extracted from..
        /// </summary>
        public static string ExtractDataColumnValues_Column_Description {
            get {
                return ResourceManager.GetString("ExtractDataColumnValues_Column_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Column.
        /// </summary>
        public static string ExtractDataColumnValues_Column_DisplayName {
            get {
                return ResourceManager.GetString("ExtractDataColumnValues_Column_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value to be use in case of the extract value cannot be converted to the specified type..
        /// </summary>
        public static string ExtractDataColumnValues_DefaultValue_Description {
            get {
                return ResourceManager.GetString("ExtractDataColumnValues_DefaultValue_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DefaultValue.
        /// </summary>
        public static string ExtractDataColumnValues_DefaultValue_DisplayName {
            get {
                return ResourceManager.GetString("ExtractDataColumnValues_DefaultValue_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns an array with all values of a respective data column..
        /// </summary>
        public static string ExtractDataColumnValues_Description {
            get {
                return ResourceManager.GetString("ExtractDataColumnValues_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extract Data Column Values.
        /// </summary>
        public static string ExtractDataColumnValues_DisplayName {
            get {
                return ResourceManager.GetString("ExtractDataColumnValues_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The column index &apos;{0}&apos; does not exist on the DataTable..
        /// </summary>
        public static string ExtractDataColumnValues_ErrorMsg_InvalidColumnIndex {
            get {
                return ResourceManager.GetString("ExtractDataColumnValues_ErrorMsg_InvalidColumnIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The column &apos;{0}&apos; does not exist on the DataTable..
        /// </summary>
        public static string ExtractDataColumnValues_ErrorMsg_InvalidColumnName {
            get {
                return ResourceManager.GetString("ExtractDataColumnValues_ErrorMsg_InvalidColumnName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data table where the values will be extracted from..
        /// </summary>
        public static string ExtractDataColumnValues_InputDataTable_Description {
            get {
                return ResourceManager.GetString("ExtractDataColumnValues_InputDataTable_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataTable.
        /// </summary>
        public static string ExtractDataColumnValues_InputDataTable_DisplayName {
            get {
                return ResourceManager.GetString("ExtractDataColumnValues_InputDataTable_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The array of values extracted from the data column..
        /// </summary>
        public static string ExtractDataColumnValues_Result_Description {
            get {
                return ResourceManager.GetString("ExtractDataColumnValues_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result.
        /// </summary>
        public static string ExtractDataColumnValues_Result_DisplayName {
            get {
                return ResourceManager.GetString("ExtractDataColumnValues_Result_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removes null values, empty strings, or those which consists only of white-space characters..
        /// </summary>
        public static string ExtractDataColumnValues_Sanitize_Description {
            get {
                return ResourceManager.GetString("ExtractDataColumnValues_Sanitize_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sanitize.
        /// </summary>
        public static string ExtractDataColumnValues_Sanitize_DisplayName {
            get {
                return ResourceManager.GetString("ExtractDataColumnValues_Sanitize_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows to transform the text casing during the extraction. Applied only if the TypeArgument is set to System.String..
        /// </summary>
        public static string ExtractDataColumnValues_TextCase_Description {
            get {
                return ResourceManager.GetString("ExtractDataColumnValues_TextCase_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TextCase.
        /// </summary>
        public static string ExtractDataColumnValues_TextCase_DisplayName {
            get {
                return ResourceManager.GetString("ExtractDataColumnValues_TextCase_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removes all leading and trailing occurrences of a set of specified characters from each extracted value. Applied only if the TypeArgument is set to System.String..
        /// </summary>
        public static string ExtractDataColumnValues_Trim_Description {
            get {
                return ResourceManager.GetString("ExtractDataColumnValues_Trim_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trim.
        /// </summary>
        public static string ExtractDataColumnValues_Trim_DisplayName {
            get {
                return ResourceManager.GetString("ExtractDataColumnValues_Trim_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines the type of each value extracted from the data column..
        /// </summary>
        public static string ExtractDataColumnValues_TypeArgument_Description {
            get {
                return ResourceManager.GetString("ExtractDataColumnValues_TypeArgument_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TypeArgument.
        /// </summary>
        public static string ExtractDataColumnValues_TypeArgument_DisplayName {
            get {
                return ResourceManager.GetString("ExtractDataColumnValues_TypeArgument_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns only a list of unique values..
        /// </summary>
        public static string ExtractDataColumnValues_Unique_Description {
            get {
                return ResourceManager.GetString("ExtractDataColumnValues_Unique_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unique.
        /// </summary>
        public static string ExtractDataColumnValues_Unique_DisplayName {
            get {
                return ResourceManager.GetString("ExtractDataColumnValues_Unique_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The column name or column index that is going to be updated..
        /// </summary>
        public static string FillDataColumn_Column_Description {
            get {
                return ResourceManager.GetString("FillDataColumn_Column_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Column.
        /// </summary>
        public static string FillDataColumn_Column_DisplayName {
            get {
                return ResourceManager.GetString("FillDataColumn_Column_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fills all rows of a data table column with the specified value..
        /// </summary>
        public static string FillDataColumn_Description {
            get {
                return ResourceManager.GetString("FillDataColumn_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fill Data Column.
        /// </summary>
        public static string FillDataColumn_DisplayName {
            get {
                return ResourceManager.GetString("FillDataColumn_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data table containing the column that is going to be updated..
        /// </summary>
        public static string FillDataColumn_ReferenceDataTable_Description {
            get {
                return ResourceManager.GetString("FillDataColumn_ReferenceDataTable_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataTable.
        /// </summary>
        public static string FillDataColumn_ReferenceDataTable_DisplayName {
            get {
                return ResourceManager.GetString("FillDataColumn_ReferenceDataTable_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value assigned to all rows of the data table column. The value will default to DBNull if no value is provided, which in this scenario, requires a column configured to accept null values..
        /// </summary>
        public static string FillDataColumn_Value_Description {
            get {
                return ResourceManager.GetString("FillDataColumn_Value_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        public static string FillDataColumn_Value_DisplayName {
            get {
                return ResourceManager.GetString("FillDataColumn_Value_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The column {0} was not found in the specified table..
        /// </summary>
        public static string FillDataTable_ErrorMsg_Column {
            get {
                return ResourceManager.GetString("FillDataTable_ErrorMsg_Column", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Increments the value of a variable by the specified increment value..
        /// </summary>
        public static string Increment_Description {
            get {
                return ResourceManager.GetString("Increment_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The increment value cannot be smaller than 1..
        /// </summary>
        public static string Increment_ErrorMsg_MinValue {
            get {
                return ResourceManager.GetString("Increment_ErrorMsg_MinValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The increment value..
        /// </summary>
        public static string Increment_Value_Description {
            get {
                return ResourceManager.GetString("Increment_Value_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        public static string Increment_Value_DisplayName {
            get {
                return ResourceManager.GetString("Increment_Value_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The variable to be incremented..
        /// </summary>
        public static string Increment_Variable_Description {
            get {
                return ResourceManager.GetString("Increment_Variable_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variable.
        /// </summary>
        public static string Increment_Variable_DisplayName {
            get {
                return ResourceManager.GetString("Increment_Variable_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input.
        /// </summary>
        public static string Input_Category {
            get {
                return ResourceManager.GetString("Input_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reference.
        /// </summary>
        public static string InputOutput_Category {
            get {
                return ResourceManager.GetString("InputOutput_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Performs a boolean evaluation of a value or expression..
        /// </summary>
        public static string IsTrue_Description {
            get {
                return ResourceManager.GetString("IsTrue_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is True.
        /// </summary>
        public static string IsTrue_DisplayName {
            get {
                return ResourceManager.GetString("IsTrue_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The result of the evaluation..
        /// </summary>
        public static string IsTrue_Result_Description {
            get {
                return ResourceManager.GetString("IsTrue_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result.
        /// </summary>
        public static string IsTrue_Result_DisplayName {
            get {
                return ResourceManager.GetString("IsTrue_Result_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value or expression to be evaluated..
        /// </summary>
        public static string IsTrue_Value_Description {
            get {
                return ResourceManager.GetString("IsTrue_Value_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        public static string IsTrue_Value_DisplayName {
            get {
                return ResourceManager.GetString("IsTrue_Value_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Iterates the activity execution for the specified number of times..
        /// </summary>
        public static string Iterate_Description {
            get {
                return ResourceManager.GetString("Iterate_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Iterations must have a value greater than zero..
        /// </summary>
        public static string Iterate_ErrorMsg_IterationsMinValue {
            get {
                return ResourceManager.GetString("Iterate_ErrorMsg_IterationsMinValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of iterations that must be run..
        /// </summary>
        public static string Iterate_Iterations_Description {
            get {
                return ResourceManager.GetString("Iterate_Iterations_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Iterations.
        /// </summary>
        public static string Iterate_Iterations_DisplayName {
            get {
                return ResourceManager.GetString("Iterate_Iterations_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reverses the order of the output index..
        /// </summary>
        public static string Iterate_Reverse_Description {
            get {
                return ResourceManager.GetString("Iterate_Reverse_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reverse.
        /// </summary>
        public static string Iterate_Reverse_DisplayName {
            get {
                return ResourceManager.GetString("Iterate_Reverse_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The credential to be used for the drive mapping..
        /// </summary>
        public static string MapDrive_Credential_Description {
            get {
                return ResourceManager.GetString("MapDrive_Credential_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Credential.
        /// </summary>
        public static string MapDrive_Credential_DisplayName {
            get {
                return ResourceManager.GetString("MapDrive_Credential_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maps a Network Drive into the system..
        /// </summary>
        public static string MapDrive_Description {
            get {
                return ResourceManager.GetString("MapDrive_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Map Drive.
        /// </summary>
        public static string MapDrive_DisplayName {
            get {
                return ResourceManager.GetString("MapDrive_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The drive letter to be mapped, if not specified, a random one will be chosen. When specifing, the valid inputs are &apos;X&apos;, &apos;X:&apos; or &apos;X:\&apos;, where X can be any letter..
        /// </summary>
        public static string MapDrive_DriveLetter_Description {
            get {
                return ResourceManager.GetString("MapDrive_DriveLetter_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DriveLetter.
        /// </summary>
        public static string MapDrive_DriveLetter_DisplayName {
            get {
                return ResourceManager.GetString("MapDrive_DriveLetter_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tries to force the connection if the drive letter is already being in use..
        /// </summary>
        public static string MapDrive_Force_Description {
            get {
                return ResourceManager.GetString("MapDrive_Force_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force.
        /// </summary>
        public static string MapDrive_Force_DisplayName {
            get {
                return ResourceManager.GetString("MapDrive_Force_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The mapped drive letter if the mapping was successful, it is represented in the format &quot;&lt;letter&gt;:\&quot;..
        /// </summary>
        public static string MapDrive_MappedDrive_Description {
            get {
                return ResourceManager.GetString("MapDrive_MappedDrive_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MappedDrive.
        /// </summary>
        public static string MapDrive_MappedDrive_DisplayName {
            get {
                return ResourceManager.GetString("MapDrive_MappedDrive_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The response code of the WNetAddConnection2A..
        /// </summary>
        public static string MapDrive_ResponseCode_Description {
            get {
                return ResourceManager.GetString("MapDrive_ResponseCode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ResponseCode.
        /// </summary>
        public static string MapDrive_ResponseCode_DisplayName {
            get {
                return ResourceManager.GetString("MapDrive_ResponseCode_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The equivalent response message of the response code..
        /// </summary>
        public static string MapDrive_ResponseMessage_Description {
            get {
                return ResourceManager.GetString("MapDrive_ResponseMessage_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ResponseMessage.
        /// </summary>
        public static string MapDrive_ResponseMessage_DisplayName {
            get {
                return ResourceManager.GetString("MapDrive_ResponseMessage_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns true if the drive was successfully mapped, false otherwise..
        /// </summary>
        public static string MapDrive_Result_Description {
            get {
                return ResourceManager.GetString("MapDrive_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result.
        /// </summary>
        public static string MapDrive_Result_DisplayName {
            get {
                return ResourceManager.GetString("MapDrive_Result_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The shared drive path to connect with..
        /// </summary>
        public static string MapDrive_SharedDrivePath_Description {
            get {
                return ResourceManager.GetString("MapDrive_SharedDrivePath_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SharedDrivePath.
        /// </summary>
        public static string MapDrive_SharedDrivePath_DisplayName {
            get {
                return ResourceManager.GetString("MapDrive_SharedDrivePath_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The drive letter input is invalid. Valid inputs are &apos;X&apos;, &apos;X:&apos; or &apos;X:\\&apos;, where X can be any letter..
        /// </summary>
        public static string NetworkDrive_ErrorMsg_InvalidDriveLetter {
            get {
                return ResourceManager.GetString("NetworkDrive_ErrorMsg_InvalidDriveLetter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No drivers available.
        /// </summary>
        public static string NetworkDrive_ErrorMsg_NoDriversAvailable {
            get {
                return ResourceManager.GetString("NetworkDrive_ErrorMsg_NoDriversAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Condition which determines if the activity will be evaluated. If empty it assumes True..
        /// </summary>
        public static string Next_Condition_Description {
            get {
                return ResourceManager.GetString("Next_Condition_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Condition.
        /// </summary>
        public static string Next_Condition_DisplayName {
            get {
                return ResourceManager.GetString("Next_Condition_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skips the current iteration in an Iterate activity and proceeds the execution with the next iteration..
        /// </summary>
        public static string Next_Description {
            get {
                return ResourceManager.GetString("Next_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Options.
        /// </summary>
        public static string Options_Category {
            get {
                return ResourceManager.GetString("Options_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output.
        /// </summary>
        public static string Output_Category {
            get {
                return ResourceManager.GetString("Output_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When true, it avoids the &quot;column name already belongs to DataTable&quot; error by adding a numeric suffix to it..
        /// </summary>
        public static string PromoteHeaders_AutoRename_Description {
            get {
                return ResourceManager.GetString("PromoteHeaders_AutoRename_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoRename.
        /// </summary>
        public static string PromoteHeaders_AutoRename_DisplayName {
            get {
                return ResourceManager.GetString("PromoteHeaders_AutoRename_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Promotes the first row of values to new column headers..
        /// </summary>
        public static string PromoteHeaders_Description {
            get {
                return ResourceManager.GetString("PromoteHeaders_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Promote Headers.
        /// </summary>
        public static string PromoteHeaders_DisplayName {
            get {
                return ResourceManager.GetString("PromoteHeaders_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replaces an empty column name by the value of this property..
        /// </summary>
        public static string PromoteHeaders_EmptyColumnName_Description {
            get {
                return ResourceManager.GetString("PromoteHeaders_EmptyColumnName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EmptyColumnName.
        /// </summary>
        public static string PromoteHeaders_EmptyColumnName_DisplayName {
            get {
                return ResourceManager.GetString("PromoteHeaders_EmptyColumnName_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no rows in the input data table to promote..
        /// </summary>
        public static string PromoteHeaders_ErrorMsg_NoData {
            get {
                return ResourceManager.GetString("PromoteHeaders_ErrorMsg_NoData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input DataTable..
        /// </summary>
        public static string PromoteHeaders_InputDataTable_Description {
            get {
                return ResourceManager.GetString("PromoteHeaders_InputDataTable_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataTable.
        /// </summary>
        public static string PromoteHeaders_InputDataTable_DisplayName {
            get {
                return ResourceManager.GetString("PromoteHeaders_InputDataTable_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The output DataTable..
        /// </summary>
        public static string PromoteHeaders_Result_Description {
            get {
                return ResourceManager.GetString("PromoteHeaders_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result.
        /// </summary>
        public static string PromoteHeaders_Result_DisplayName {
            get {
                return ResourceManager.GetString("PromoteHeaders_Result_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generates a random string based on a pre-defined format. Useful to generate short references, labels, prefixes, etc. Do not use this activity for password generation, it is not suitable for this purpose..
        /// </summary>
        public static string RandomString_Description {
            get {
                return ResourceManager.GetString("RandomString_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Random String.
        /// </summary>
        public static string RandomString_DisplayName {
            get {
                return ResourceManager.GetString("RandomString_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Format is null or empty.
        /// </summary>
        public static string RandomString_ErrorMsg_FormatIsNullOrEmpty {
            get {
                return ResourceManager.GetString("RandomString_ErrorMsg_FormatIsNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RC2.
        /// </summary>
        public static string RC2AlgorithmEncryption_DisplayName {
            get {
                return ResourceManager.GetString("RC2AlgorithmEncryption_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The column names or column indexes to be removed. Can be either a collection of string or int..
        /// </summary>
        public static string RemoveDataColumns_Columns_Description {
            get {
                return ResourceManager.GetString("RemoveDataColumns_Columns_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Columns.
        /// </summary>
        public static string RemoveDataColumns_Columns_DisplayName {
            get {
                return ResourceManager.GetString("RemoveDataColumns_Columns_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removes the specified columns from a DataTable.
        /// </summary>
        public static string RemoveDataColumns_Description {
            get {
                return ResourceManager.GetString("RemoveDataColumns_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Data Columns.
        /// </summary>
        public static string RemoveDataColumns_DisplayName {
            get {
                return ResourceManager.GetString("RemoveDataColumns_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DataTable object from which the columns is to be removed..
        /// </summary>
        public static string RemoveDataColumns_ReferenceDataTable_Description {
            get {
                return ResourceManager.GetString("RemoveDataColumns_ReferenceDataTable_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataTable.
        /// </summary>
        public static string RemoveDataColumns_ReferenceDataTable_DisplayName {
            get {
                return ResourceManager.GetString("RemoveDataColumns_ReferenceDataTable_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The column names or column indexes to be analyzed on duplicate rows comparison. Can be either a collection of string or int..
        /// </summary>
        public static string RemoveDuplicateRows_Columns_Description {
            get {
                return ResourceManager.GetString("RemoveDuplicateRows_Columns_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Columns.
        /// </summary>
        public static string RemoveDuplicateRows_Columns_DisplayName {
            get {
                return ResourceManager.GetString("RemoveDuplicateRows_Columns_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removes the duplicate rows from a DataTable keeping only the first occurrence. Allows specify a limited number of columns for this comparison..
        /// </summary>
        public static string RemoveDuplicateRows_Description {
            get {
                return ResourceManager.GetString("RemoveDuplicateRows_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Duplicate Rows.
        /// </summary>
        public static string RemoveDuplicateRows_DisplayName {
            get {
                return ResourceManager.GetString("RemoveDuplicateRows_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DataTable to remove duplicated rows..
        /// </summary>
        public static string RemoveDuplicateRows_InputDataTable_Description {
            get {
                return ResourceManager.GetString("RemoveDuplicateRows_InputDataTable_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataTable.
        /// </summary>
        public static string RemoveDuplicateRows_InputDataTable_DisplayName {
            get {
                return ResourceManager.GetString("RemoveDuplicateRows_InputDataTable_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The output DataTable with the distinct rows..
        /// </summary>
        public static string RemoveDuplicateRows_Result_Description {
            get {
                return ResourceManager.GetString("RemoveDuplicateRows_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result.
        /// </summary>
        public static string RemoveDuplicateRows_Result_DisplayName {
            get {
                return ResourceManager.GetString("RemoveDuplicateRows_Result_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The column indexes or column names to verify..
        /// </summary>
        public static string RemoveEmptyRows_Columns_Description {
            get {
                return ResourceManager.GetString("RemoveEmptyRows_Columns_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Columns.
        /// </summary>
        public static string RemoveEmptyRows_Columns_DisplayName {
            get {
                return ResourceManager.GetString("RemoveEmptyRows_Columns_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Options (Custom Mode).
        /// </summary>
        public static string RemoveEmptyRows_CustomOptions_Category {
            get {
                return ResourceManager.GetString("RemoveEmptyRows_CustomOptions_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CustomOptions.
        /// </summary>
        public static string RemoveEmptyRows_CustomOptions_DisplayName {
            get {
                return ResourceManager.GetString("RemoveEmptyRows_CustomOptions_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removes the empty rows from a DataTable..
        /// </summary>
        public static string RemoveEmptyRows_Description {
            get {
                return ResourceManager.GetString("RemoveEmptyRows_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Empty Rows.
        /// </summary>
        public static string RemoveEmptyRows_DisplayName {
            get {
                return ResourceManager.GetString("RemoveEmptyRows_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input DataTable..
        /// </summary>
        public static string RemoveEmptyRows_InputDataTable_Description {
            get {
                return ResourceManager.GetString("RemoveEmptyRows_InputDataTable_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataTable.
        /// </summary>
        public static string RemoveEmptyRows_InputDataTable_DisplayName {
            get {
                return ResourceManager.GetString("RemoveEmptyRows_InputDataTable_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines when a row should be removed. (All) means that all columns must be empty to remove the row. (Any) for any column empty and (Custom) for the user defined rules..
        /// </summary>
        public static string RemoveEmptyRows_Mode_Description {
            get {
                return ResourceManager.GetString("RemoveEmptyRows_Mode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mode.
        /// </summary>
        public static string RemoveEmptyRows_Mode_DisplayName {
            get {
                return ResourceManager.GetString("RemoveEmptyRows_Mode_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines the evaluation condition for the specified columns where (And) checks if all columns are empty and (Or) checks if any of the columns are empty..
        /// </summary>
        public static string RemoveEmptyRows_Operator_Description {
            get {
                return ResourceManager.GetString("RemoveEmptyRows_Operator_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operator.
        /// </summary>
        public static string RemoveEmptyRows_Operator_DisplayName {
            get {
                return ResourceManager.GetString("RemoveEmptyRows_Operator_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The output DataTable..
        /// </summary>
        public static string RemoveEmptyRows_Result_Description {
            get {
                return ResourceManager.GetString("RemoveEmptyRows_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result.
        /// </summary>
        public static string RemoveEmptyRows_Result_DisplayName {
            get {
                return ResourceManager.GetString("RemoveEmptyRows_Result_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removes the value with the specified key from the Dictionary..
        /// </summary>
        public static string RemoveFromDictionary_Description {
            get {
                return ResourceManager.GetString("RemoveFromDictionary_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove From Dictionary.
        /// </summary>
        public static string RemoveFromDictionary_DisplayName {
            get {
                return ResourceManager.GetString("RemoveFromDictionary_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Dictionary where the element will be removed from..
        /// </summary>
        public static string RemoveFromDictionary_InputDictionary_Description {
            get {
                return ResourceManager.GetString("RemoveFromDictionary_InputDictionary_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dictionary.
        /// </summary>
        public static string RemoveFromDictionary_InputDictionary_DisplayName {
            get {
                return ResourceManager.GetString("RemoveFromDictionary_InputDictionary_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key of the element to remove..
        /// </summary>
        public static string RemoveFromDictionary_Key_Description {
            get {
                return ResourceManager.GetString("RemoveFromDictionary_Key_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key.
        /// </summary>
        public static string RemoveFromDictionary_Key_DisplayName {
            get {
                return ResourceManager.GetString("RemoveFromDictionary_Key_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Repeats an action until an exception occur or the maximum number of repetitions is reached..
        /// </summary>
        public static string RepeatUntilFailure_Description {
            get {
                return ResourceManager.GetString("RepeatUntilFailure_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Repeat Until Failure.
        /// </summary>
        public static string RepeatUntilFailure_DisplayName {
            get {
                return ResourceManager.GetString("RepeatUntilFailure_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current iteration that was being processed. You can use it to determine in which iteration the process has broken..
        /// </summary>
        public static string RepeatUntilFailure_IterationNumber_Description {
            get {
                return ResourceManager.GetString("RepeatUntilFailure_IterationNumber_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IterationNumber.
        /// </summary>
        public static string RepeatUntilFailure_IterationNumber_DisplayName {
            get {
                return ResourceManager.GetString("RepeatUntilFailure_IterationNumber_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount of time between each loop iteration..
        /// </summary>
        public static string RepeatUntilFailure_LoopInterval_Description {
            get {
                return ResourceManager.GetString("RepeatUntilFailure_LoopInterval_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LoopInterval.
        /// </summary>
        public static string RepeatUntilFailure_LoopInterval_DisplayName {
            get {
                return ResourceManager.GetString("RepeatUntilFailure_LoopInterval_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum number of repetitions to stop the loop in case no exception occur. If not set, its default value is 300..
        /// </summary>
        public static string RepeatUntilFailure_MaximumRepetitions_Description {
            get {
                return ResourceManager.GetString("RepeatUntilFailure_MaximumRepetitions_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MaximumRepetitions.
        /// </summary>
        public static string RepeatUntilFailure_MaximumRepetitions_DisplayName {
            get {
                return ResourceManager.GetString("RepeatUntilFailure_MaximumRepetitions_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The exception which caused the loop break. This result can be null in case of no exceptions did occur..
        /// </summary>
        public static string RepeatUntilFailure_OutputException_Description {
            get {
                return ResourceManager.GetString("RepeatUntilFailure_OutputException_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OutputException.
        /// </summary>
        public static string RepeatUntilFailure_OutputException_DisplayName {
            get {
                return ResourceManager.GetString("RepeatUntilFailure_OutputException_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The text which contains the tokens to be replaced..
        /// </summary>
        public static string ReplaceTokens_Content_Description {
            get {
                return ResourceManager.GetString("ReplaceTokens_Content_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Content.
        /// </summary>
        public static string ReplaceTokens_Content_DisplayName {
            get {
                return ResourceManager.GetString("ReplaceTokens_Content_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replaces the tokens of a string by the values of a Dictionary. Tokens are strings written in a specific pattern, usually enclosed in special characters. Use the combination of &apos;Pattern&apos; and &apos;Placeholder&apos; properties to define your token format..
        /// </summary>
        public static string ReplaceTokens_Description {
            get {
                return ResourceManager.GetString("ReplaceTokens_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace Tokens.
        /// </summary>
        public static string ReplaceTokens_DisplayName {
            get {
                return ResourceManager.GetString("ReplaceTokens_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The dictionary where each key/value pair are used to replace the tokens..
        /// </summary>
        public static string ReplaceTokens_InputDictionary_Description {
            get {
                return ResourceManager.GetString("ReplaceTokens_InputDictionary_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dictionary.
        /// </summary>
        public static string ReplaceTokens_InputDictionary_DisplayName {
            get {
                return ResourceManager.GetString("ReplaceTokens_InputDictionary_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The token text pattern. It can have characters either before and after the placeholder..
        /// </summary>
        public static string ReplaceTokens_Pattern_Description {
            get {
                return ResourceManager.GetString("ReplaceTokens_Pattern_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pattern.
        /// </summary>
        public static string ReplaceTokens_Pattern_DisplayName {
            get {
                return ResourceManager.GetString("ReplaceTokens_Pattern_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The placeholder where each dictionary key will found..
        /// </summary>
        public static string ReplaceTokens_Placeholder_Description {
            get {
                return ResourceManager.GetString("ReplaceTokens_Placeholder_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Placeholder.
        /// </summary>
        public static string ReplaceTokens_Placeholder_DisplayName {
            get {
                return ResourceManager.GetString("ReplaceTokens_Placeholder_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The content after the tokens replacement be performed..
        /// </summary>
        public static string ReplaceTokens_Result_Description {
            get {
                return ResourceManager.GetString("ReplaceTokens_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result.
        /// </summary>
        public static string ReplaceTokens_Result_DisplayName {
            get {
                return ResourceManager.GetString("ReplaceTokens_Result_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rijndael.
        /// </summary>
        public static string RijndaelAlgorithmEncryption_DisplayName {
            get {
                return ResourceManager.GetString("RijndaelAlgorithmEncryption_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides a set of methods and properties that you can use to accurately measure elapsed time..
        /// </summary>
        public static string Stopwatch_Description {
            get {
                return ResourceManager.GetString("Stopwatch_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines which method must be invoked by activity..
        /// </summary>
        public static string Stopwatch_Method_Description {
            get {
                return ResourceManager.GetString("Stopwatch_Method_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method.
        /// </summary>
        public static string Stopwatch_Method_DisplayName {
            get {
                return ResourceManager.GetString("Stopwatch_Method_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A variable that represents the instance of System.Diagnostics.Stopwatch class..
        /// </summary>
        public static string Stopwatch_ReferenceStopwatch_Description {
            get {
                return ResourceManager.GetString("Stopwatch_ReferenceStopwatch_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopwatch.
        /// </summary>
        public static string Stopwatch_ReferenceStopwatch_DisplayName {
            get {
                return ResourceManager.GetString("Stopwatch_ReferenceStopwatch_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of iterations for the operation..
        /// </summary>
        public static string SymmetricAlgorithmEncryptionBase_Iterations_Description {
            get {
                return ResourceManager.GetString("SymmetricAlgorithmEncryptionBase_Iterations_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Iterations.
        /// </summary>
        public static string SymmetricAlgorithmEncryptionBase_Iterations_DisplayName {
            get {
                return ResourceManager.GetString("SymmetricAlgorithmEncryptionBase_Iterations_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tries to gracefully close all instances of the applications corresponding to the specified processes. If not possible, it kills the process for the current user session..
        /// </summary>
        public static string TerminateProcess_Description {
            get {
                return ResourceManager.GetString("TerminateProcess_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Terminate Process.
        /// </summary>
        public static string TerminateProcess_DisplayName {
            get {
                return ResourceManager.GetString("TerminateProcess_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the process to close or kill. Can be either a single name or a list of names..
        /// </summary>
        public static string TerminateProcess_ProcessName_Description {
            get {
                return ResourceManager.GetString("TerminateProcess_ProcessName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ProcessName.
        /// </summary>
        public static string TerminateProcess_ProcessName_DisplayName {
            get {
                return ResourceManager.GetString("TerminateProcess_ProcessName_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines if is to encrypt or decrypt the input value..
        /// </summary>
        public static string TextEncryption_Action_Description {
            get {
                return ResourceManager.GetString("TextEncryption_Action_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action.
        /// </summary>
        public static string TextEncryption_Action_DisplayName {
            get {
                return ResourceManager.GetString("TextEncryption_Action_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides methods to encrypt or decrypt a text using a specified algorithm and key..
        /// </summary>
        public static string TextEncryption_Description {
            get {
                return ResourceManager.GetString("TextEncryption_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text Encryption.
        /// </summary>
        public static string TextEncryption_DisplayName {
            get {
                return ResourceManager.GetString("TextEncryption_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The text to be encrypted or decrypted..
        /// </summary>
        public static string TextEncryption_Input_Description {
            get {
                return ResourceManager.GetString("TextEncryption_Input_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input.
        /// </summary>
        public static string TextEncryption_Input_DisplayName {
            get {
                return ResourceManager.GetString("TextEncryption_Input_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key to be use. Can be a string or a SecureString..
        /// </summary>
        public static string TextEncryption_Key_Description {
            get {
                return ResourceManager.GetString("TextEncryption_Key_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key.
        /// </summary>
        public static string TextEncryption_Key_DisplayName {
            get {
                return ResourceManager.GetString("TextEncryption_Key_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resulting string from the encrypt or decrypt operation..
        /// </summary>
        public static string TextEncryption_Result_Description {
            get {
                return ResourceManager.GetString("TextEncryption_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result.
        /// </summary>
        public static string TextEncryption_Result_DisplayName {
            get {
                return ResourceManager.GetString("TextEncryption_Result_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The encoding used to interpret the text and key..
        /// </summary>
        public static string TextEncryption_TextEncoding_Description {
            get {
                return ResourceManager.GetString("TextEncryption_TextEncoding_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TextEncoding.
        /// </summary>
        public static string TextEncryption_TextEncoding_DisplayName {
            get {
                return ResourceManager.GetString("TextEncryption_TextEncoding_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executes the contained activities once and continues to do so for a specified period of time..
        /// </summary>
        public static string TimeLoop_Description {
            get {
                return ResourceManager.GetString("TimeLoop_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time Loop.
        /// </summary>
        public static string TimeLoop_DisplayName {
            get {
                return ResourceManager.GetString("TimeLoop_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exits immediately from the loop in case of an unhandled exception occur..
        /// </summary>
        public static string TimeLoop_ExitOnException_Description {
            get {
                return ResourceManager.GetString("TimeLoop_ExitOnException_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ExitOnException.
        /// </summary>
        public static string TimeLoop_ExitOnException_DisplayName {
            get {
                return ResourceManager.GetString("TimeLoop_ExitOnException_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current iteration (zero-based) that is being processed..
        /// </summary>
        public static string TimeLoop_Index_Description {
            get {
                return ResourceManager.GetString("TimeLoop_Index_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index.
        /// </summary>
        public static string TimeLoop_Index_DisplayName {
            get {
                return ResourceManager.GetString("TimeLoop_Index_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines if the time loop reached the time limit..
        /// </summary>
        public static string TimeLoop_IsTimeout_Description {
            get {
                return ResourceManager.GetString("TimeLoop_IsTimeout_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IsTimeout.
        /// </summary>
        public static string TimeLoop_IsTimeout_DisplayName {
            get {
                return ResourceManager.GetString("TimeLoop_IsTimeout_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount of time to wait on each loop iteration..
        /// </summary>
        public static string TimeLoop_LoopInterval_Description {
            get {
                return ResourceManager.GetString("TimeLoop_LoopInterval_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LoopInterval.
        /// </summary>
        public static string TimeLoop_LoopInterval_DisplayName {
            get {
                return ResourceManager.GetString("TimeLoop_LoopInterval_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The exception which caused the loop break. This result can be null in case of no exceptions did occur..
        /// </summary>
        public static string TimeLoop_OutputException_Description {
            get {
                return ResourceManager.GetString("TimeLoop_OutputException_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception.
        /// </summary>
        public static string TimeLoop_OutputException_DisplayName {
            get {
                return ResourceManager.GetString("TimeLoop_OutputException_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Propagates the exception instead of handling it..
        /// </summary>
        public static string TimeLoop_PropagateException_Description {
            get {
                return ResourceManager.GetString("TimeLoop_PropagateException_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PropagateException.
        /// </summary>
        public static string TimeLoop_PropagateException_DisplayName {
            get {
                return ResourceManager.GetString("TimeLoop_PropagateException_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines for how long the loop iterations must happen. Its value is checked after each iteration. The current iteration of the loop is not interrupted when the timer has end..
        /// </summary>
        public static string TimeLoop_Timer_Description {
            get {
                return ResourceManager.GetString("TimeLoop_Timer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timer.
        /// </summary>
        public static string TimeLoop_Timer_DisplayName {
            get {
                return ResourceManager.GetString("TimeLoop_Timer_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transposes a DataTable by swapping its rows and columns so that rows become columns and columns become rows..
        /// </summary>
        public static string TransposeData_Description {
            get {
                return ResourceManager.GetString("TransposeData_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transpose Data.
        /// </summary>
        public static string TransposeData_DisplayName {
            get {
                return ResourceManager.GetString("TransposeData_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input DataTable to be transposed..
        /// </summary>
        public static string TransposeData_InputDataTable_Description {
            get {
                return ResourceManager.GetString("TransposeData_InputDataTable_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataTable.
        /// </summary>
        public static string TransposeData_InputDataTable_DisplayName {
            get {
                return ResourceManager.GetString("TransposeData_InputDataTable_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The output DataTable resulting of the transpose..
        /// </summary>
        public static string TransposeData_Result_Description {
            get {
                return ResourceManager.GetString("TransposeData_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result.
        /// </summary>
        public static string TransposeData_Result_DisplayName {
            get {
                return ResourceManager.GetString("TransposeData_Result_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Triple DES.
        /// </summary>
        public static string TripleDESAlgorithmEncryption_DisplayName {
            get {
                return ResourceManager.GetString("TripleDESAlgorithmEncryption_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The drive letter of the mapped drive. Valid inputs are &apos;X&apos;, &apos;X:&apos; or &apos;X:\&apos;, where X can be any letter..
        /// </summary>
        public static string UnmapDrive_DriveLetter_Description {
            get {
                return ResourceManager.GetString("UnmapDrive_DriveLetter_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DriveLetter.
        /// </summary>
        public static string UnmapDrive_DriveLetter_DisplayName {
            get {
                return ResourceManager.GetString("UnmapDrive_DriveLetter_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The response code of the WNetCancelConnection2A..
        /// </summary>
        public static string UnmapDrive_ResponseCode_Description {
            get {
                return ResourceManager.GetString("UnmapDrive_ResponseCode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ResponseCode.
        /// </summary>
        public static string UnmapDrive_ResponseCode_DisplayName {
            get {
                return ResourceManager.GetString("UnmapDrive_ResponseCode_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The equivalent response message of the response code..
        /// </summary>
        public static string UnmapDrive_ResponseMessage_Description {
            get {
                return ResourceManager.GetString("UnmapDrive_ResponseMessage_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ResponseMessage.
        /// </summary>
        public static string UnmapDrive_ResponseMessage_DisplayName {
            get {
                return ResourceManager.GetString("UnmapDrive_ResponseMessage_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns true if the drive was successfully unmapped, false otherise..
        /// </summary>
        public static string UnmapDrive_Result_Description {
            get {
                return ResourceManager.GetString("UnmapDrive_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result.
        /// </summary>
        public static string UnmapDrive_Result_DisplayName {
            get {
                return ResourceManager.GetString("UnmapDrive_Result_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompress files from a zip archive..
        /// </summary>
        public static string Unzip_Description {
            get {
                return ResourceManager.GetString("Unzip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zip entry name ends in directory separator character but contains data..
        /// </summary>
        public static string Unzip_ErrorMsg_DirNameWithData {
            get {
                return ResourceManager.GetString("Unzip_ErrorMsg_DirNameWithData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extracting Zip entry would have resulted in a file outside the specified destination directory..
        /// </summary>
        public static string Unzip_ErrorMsg_OutsideDir {
            get {
                return ResourceManager.GetString("Unzip_ErrorMsg_OutsideDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path to the folder where files will be extracted..
        /// </summary>
        public static string Unzip_ExtractTo_Description {
            get {
                return ResourceManager.GetString("Unzip_ExtractTo_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ExtractTo.
        /// </summary>
        public static string Unzip_ExtractTo_DisplayName {
            get {
                return ResourceManager.GetString("Unzip_ExtractTo_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When true, overwrites an existing file that has the same name as the destination file..
        /// </summary>
        public static string Unzip_Overwrite_Description {
            get {
                return ResourceManager.GetString("Unzip_Overwrite_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overwrite.
        /// </summary>
        public static string Unzip_Overwrite_DisplayName {
            get {
                return ResourceManager.GetString("Unzip_Overwrite_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The compressed file..
        /// </summary>
        public static string Unzip_ZipFilePath_Description {
            get {
                return ResourceManager.GetString("Unzip_ZipFilePath_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ZipFilePath.
        /// </summary>
        public static string Unzip_ZipFilePath_DisplayName {
            get {
                return ResourceManager.GetString("Unzip_ZipFilePath_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide a value for {0} whose type is derived from {1}..
        /// </summary>
        public static string Validation_DerivedTypeError {
            get {
                return ResourceManager.GetString("Validation_DerivedTypeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value for {0} is null and couldn&apos;t be auto instantiated..
        /// </summary>
        public static string Validation_InstanceIsNull {
            get {
                return ResourceManager.GetString("Validation_InstanceIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot be used outside of {0} activity..
        /// </summary>
        public static string Validation_ScopeError {
            get {
                return ResourceManager.GetString("Validation_ScopeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot be used outside of {0} activities..
        /// </summary>
        public static string Validation_ScopesError {
            get {
                return ResourceManager.GetString("Validation_ScopesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide a value of type {0} for {1}..
        /// </summary>
        public static string Validation_TypeError {
            get {
                return ResourceManager.GetString("Validation_TypeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide a value for {0}..
        /// </summary>
        public static string Validation_ValueError {
            get {
                return ResourceManager.GetString("Validation_ValueError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waits until an unknown file be available by monitoring a specified folder..
        /// </summary>
        public static string WaitDynamicFile_Description {
            get {
                return ResourceManager.GetString("WaitDynamicFile_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory to be monitored..
        /// </summary>
        public static string WaitDynamicFile_DirectoryPath_Description {
            get {
                return ResourceManager.GetString("WaitDynamicFile_DirectoryPath_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FolderPath.
        /// </summary>
        public static string WaitDynamicFile_DirectoryPath_DisplayName {
            get {
                return ResourceManager.GetString("WaitDynamicFile_DirectoryPath_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wait Dynamic File.
        /// </summary>
        public static string WaitDynamicFile_DisplayName {
            get {
                return ResourceManager.GetString("WaitDynamicFile_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Considers only the files whose last write time is greater than this value. If is not set, the value used is the same as the last write time of the most recent file in the folder. If the folder is empty, the current date and time is used..
        /// </summary>
        public static string WaitDynamicFile_FromDateTime_Description {
            get {
                return ResourceManager.GetString("WaitDynamicFile_FromDateTime_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FromDateTime.
        /// </summary>
        public static string WaitDynamicFile_FromDateTime_DisplayName {
            get {
                return ResourceManager.GetString("WaitDynamicFile_FromDateTime_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the amount of time (in milliseconds) for the file re-check. Any value less than 50 will be clamped to 50. Make sure to keep this value lesser than Timeout value..
        /// </summary>
        public static string WaitDynamicFile_Interval_Description {
            get {
                return ResourceManager.GetString("WaitDynamicFile_Interval_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interval.
        /// </summary>
        public static string WaitDynamicFile_Interval_DisplayName {
            get {
                return ResourceManager.GetString("WaitDynamicFile_Interval_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The FileInfo object of the respective file when found..
        /// </summary>
        public static string WaitDynamicFile_Result_Description {
            get {
                return ResourceManager.GetString("WaitDynamicFile_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result.
        /// </summary>
        public static string WaitDynamicFile_Result_DisplayName {
            get {
                return ResourceManager.GetString("WaitDynamicFile_Result_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The search string to match against the names of files in path. This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn&apos;t support regular expressions. It supports a string or a collection of strings. Default value is all files (*.*)..
        /// </summary>
        public static string WaitDynamicFile_SearchPattern_Description {
            get {
                return ResourceManager.GetString("WaitDynamicFile_SearchPattern_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SearchPattern.
        /// </summary>
        public static string WaitDynamicFile_SearchPattern_DisplayName {
            get {
                return ResourceManager.GetString("WaitDynamicFile_SearchPattern_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum time to wait (in milliseconds) the operation to complete..
        /// </summary>
        public static string WaitDynamicFile_Timeout_Description {
            get {
                return ResourceManager.GetString("WaitDynamicFile_Timeout_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout.
        /// </summary>
        public static string WaitDynamicFile_Timeout_DisplayName {
            get {
                return ResourceManager.GetString("WaitDynamicFile_Timeout_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waits until the file be available..
        /// </summary>
        public static string WaitFile_Description {
            get {
                return ResourceManager.GetString("WaitFile_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wait File.
        /// </summary>
        public static string WaitFile_DisplayName {
            get {
                return ResourceManager.GetString("WaitFile_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified file path does not exists..
        /// </summary>
        public static string WaitFile_ErrorMsg_FilePathDoesNotExists {
            get {
                return ResourceManager.GetString("WaitFile_ErrorMsg_FilePathDoesNotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The storage path of the file..
        /// </summary>
        public static string WaitFile_FilePath_Description {
            get {
                return ResourceManager.GetString("WaitFile_FilePath_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FilePath.
        /// </summary>
        public static string WaitFile_FilePath_DisplayName {
            get {
                return ResourceManager.GetString("WaitFile_FilePath_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the amount of time (in milliseconds) for the file re-check. Any value less than 50 will be clamped to 50. Make sure to keep this value lesser than Timeout value..
        /// </summary>
        public static string WaitFile_Interval_Description {
            get {
                return ResourceManager.GetString("WaitFile_Interval_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interval.
        /// </summary>
        public static string WaitFile_Interval_DisplayName {
            get {
                return ResourceManager.GetString("WaitFile_Interval_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The FileInfo object of the respective file when found..
        /// </summary>
        public static string WaitFile_Result_Description {
            get {
                return ResourceManager.GetString("WaitFile_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result.
        /// </summary>
        public static string WaitFile_Result_DisplayName {
            get {
                return ResourceManager.GetString("WaitFile_Result_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum time to wait (in milliseconds) the operation to complete..
        /// </summary>
        public static string WaitFile_Timeout_Description {
            get {
                return ResourceManager.GetString("WaitFile_Timeout_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout.
        /// </summary>
        public static string WaitFile_Timeout_DisplayName {
            get {
                return ResourceManager.GetString("WaitFile_Timeout_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waits until the file exists..
        /// </summary>
        public static string WaitFile_WaitForExist_Description {
            get {
                return ResourceManager.GetString("WaitFile_WaitForExist_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WaitForExist.
        /// </summary>
        public static string WaitFile_WaitForExist_DisplayName {
            get {
                return ResourceManager.GetString("WaitFile_WaitForExist_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executes the &apos;Do&apos; block if the condition activity returns true..
        /// </summary>
        public static string WhenDo_Description {
            get {
                return ResourceManager.GetString("WhenDo_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When Do.
        /// </summary>
        public static string WhenDo_DisplayName {
            get {
                return ResourceManager.GetString("WhenDo_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inverts the condition of the when test..
        /// </summary>
        public static string WhenDo_Inverted_Description {
            get {
                return ResourceManager.GetString("WhenDo_Inverted_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inverted.
        /// </summary>
        public static string WhenDo_Inverted_DisplayName {
            get {
                return ResourceManager.GetString("WhenDo_Inverted_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggles the &apos;Else&apos; block activating or deactivating it. .
        /// </summary>
        public static string WhenDo_WithElse_Description {
            get {
                return ResourceManager.GetString("WhenDo_WithElse_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WithElse.
        /// </summary>
        public static string WhenDo_WithElse_DisplayName {
            get {
                return ResourceManager.GetString("WhenDo_WithElse_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of the enumeration values that indicates whether to emphasize speed or compression..
        /// </summary>
        public static string Zip_CompressionLevel_Description {
            get {
                return ResourceManager.GetString("Zip_CompressionLevel_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CompressionLevel.
        /// </summary>
        public static string Zip_CompressionLevel_DisplayName {
            get {
                return ResourceManager.GetString("Zip_CompressionLevel_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compress files into a zip archive..
        /// </summary>
        public static string Zip_Description {
            get {
                return ResourceManager.GetString("Zip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns the amount of files added to zip archive..
        /// </summary>
        public static string Zip_FilesCount_Description {
            get {
                return ResourceManager.GetString("Zip_FilesCount_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FilesCount.
        /// </summary>
        public static string Zip_FilesCount_DisplayName {
            get {
                return ResourceManager.GetString("Zip_FilesCount_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When true, reduces the entry names when it is coming from different root paths..
        /// </summary>
        public static string Zip_ShortEntryNames_Description {
            get {
                return ResourceManager.GetString("Zip_ShortEntryNames_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ShortEntryNames.
        /// </summary>
        public static string Zip_ShortEntryNames_DisplayName {
            get {
                return ResourceManager.GetString("Zip_ShortEntryNames_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The encoding to use when writing entry names in this archive. Specify a value for this parameter only when an encoding is required for interoperability with zip archive tools and libraries that do not support UTF-8 encoding for entry names..
        /// </summary>
        public static string Zip_TextEncoding_Description {
            get {
                return ResourceManager.GetString("Zip_TextEncoding_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TextEncoding.
        /// </summary>
        public static string Zip_TextEncoding_DisplayName {
            get {
                return ResourceManager.GetString("Zip_TextEncoding_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path of the file(s) or folder(s) that will be compressed. Can be a string or a collection of strings..
        /// </summary>
        public static string Zip_ToCompress_Description {
            get {
                return ResourceManager.GetString("Zip_ToCompress_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ToCompress.
        /// </summary>
        public static string Zip_ToCompress_DisplayName {
            get {
                return ResourceManager.GetString("Zip_ToCompress_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path of the zip archive..
        /// </summary>
        public static string Zip_ZipFilePath_Description {
            get {
                return ResourceManager.GetString("Zip_ZipFilePath_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ZipFilePath.
        /// </summary>
        public static string Zip_ZipFilePath_DisplayName {
            get {
                return ResourceManager.GetString("Zip_ZipFilePath_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns the number of entries (files and folders) from a Zip archive..
        /// </summary>
        public static string ZipEntriesCount_Description {
            get {
                return ResourceManager.GetString("ZipEntriesCount_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zip Entries Count.
        /// </summary>
        public static string ZipEntriesCount_DisplayName {
            get {
                return ResourceManager.GetString("ZipEntriesCount_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of entries (files and folders) in the zip archive..
        /// </summary>
        public static string ZipEntriesCount_EntriesCount_Description {
            get {
                return ResourceManager.GetString("ZipEntriesCount_EntriesCount_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EntriesCount.
        /// </summary>
        public static string ZipEntriesCount_EntriesCount_DisplayName {
            get {
                return ResourceManager.GetString("ZipEntriesCount_EntriesCount_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide an output variable for at least one of the available options..
        /// </summary>
        public static string ZipEntriesCount_ErrorMsg_OutputMissing {
            get {
                return ResourceManager.GetString("ZipEntriesCount_ErrorMsg_OutputMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns the number of file entries in the zip archive..
        /// </summary>
        public static string ZipEntriesCount_FilesCount_Description {
            get {
                return ResourceManager.GetString("ZipEntriesCount_FilesCount_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FilesCount.
        /// </summary>
        public static string ZipEntriesCount_FilesCount_DisplayName {
            get {
                return ResourceManager.GetString("ZipEntriesCount_FilesCount_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns the number of folder entries in the zip archive..
        /// </summary>
        public static string ZipEntriesCount_FoldersCount_Description {
            get {
                return ResourceManager.GetString("ZipEntriesCount_FoldersCount_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FoldersCount.
        /// </summary>
        public static string ZipEntriesCount_FoldersCount_DisplayName {
            get {
                return ResourceManager.GetString("ZipEntriesCount_FoldersCount_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path of the zip archive..
        /// </summary>
        public static string ZipEntriesCount_ZipFilePath_Description {
            get {
                return ResourceManager.GetString("ZipEntriesCount_ZipFilePath_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ZipFilePath.
        /// </summary>
        public static string ZipEntriesCount_ZipFilePath_DisplayName {
            get {
                return ResourceManager.GetString("ZipEntriesCount_ZipFilePath_DisplayName", resourceCulture);
            }
        }
    }
}
